class Persona:
    def __init__(self, nombre, contacto, direccion):
        self.nombre = nombre
        self.contacto = contacto
        self.direccion = direccion
    
    def __str__(self):
        return f"{self.nombre} | Contacto: {self.contacto} | Dirección: {self.direccion}"




class Cliente(Persona):
    def __init__(self, nombre, contacto, direccion):
        super().__init__(nombre, contacto, direccion)
        self.mascotas = []
    
    def agregar_mascota(self, mascota):
        self.mascotas.append(mascota)
    
    def __str__(self):
        return super().__str__() + " | Mascotas: " + ", ".join([m.nombre for m in self.mascotas])




class Mascota:
    def __init__(self, nombre, especie, raza, edad):
        self.nombre = nombre
        self.especie = especie
        self.raza = raza
        self.edad = edad
        self.historial = []
    
    def agregar_cita(self, cita):
        self.historial.append(cita)
    
    def __str__(self):
        return f"{self.nombre} ({self.especie}, {self.raza}, {self.edad} años)"
    




class Cita:
    def __init__(self, fecha, hora, servicio, veterinario):
        self.fecha = fecha
        self.hora = hora
        self.servicio = servicio
        self.veterinario = veterinario
    
    def __str__(self):
        return f"Cita: {self.fecha} {self.hora} | Servicio: {self.servicio} | Veterinario: {self.veterinario.nombre}"






class Veterinario(Persona):
    def __init__(self, nombre, contacto, direccion, especialidad):
        super().__init__(nombre, contacto, direccion)
        self.especialidad = especialidad
    
    def __str__(self):
        return f"{super().__str__()} | Especialidad: {self.especialidad}"







def mostrar_menu():
    print("Bienvenido al sistema de gestión de la veterinaria.")
    print("Seleccione una opción:")
    print("1. Registrar cliente")
    print("2. Registrar mascota")
    print("3. Programar cita")
    print("4. Consultar historial")
    print("5. Salir")

def registrar_cliente(clientes):
    nombre = input("Ingrese el nombre del cliente: ")
    contacto = input("Ingrese el contacto del cliente: ")
    direccion = input("Ingrese la dirección del cliente: ")
    cliente = Cliente(nombre, contacto, direccion)
    clientes.append(cliente)
    print(f"Cliente {nombre} registrado con éxito.")

def registrar_mascota(clientes):
    nombre_cliente = input("Ingrese el nombre del cliente para registrar la mascota: ")
    cliente = next((c for c in clientes if c.nombre == nombre_cliente), None)
    if cliente:
        nombre_mascota = input("Ingrese el nombre de la mascota: ")
        especie = input("Ingrese la especie de la mascota: ")
        raza = input("Ingrese la raza de la mascota: ")
        edad = int(input("Ingrese la edad de la mascota: "))
        mascota = Mascota(nombre_mascota, especie, raza, edad)
        cliente.agregar_mascota(mascota)
        print(f"Mascota {nombre_mascota} registrada con éxito.")
    else:
        print("Cliente no encontrado.")

def programar_cita(mascotas, veterinarios):
    nombre_mascota = input("Ingrese el nombre de la mascota para programar la cita: ")
    mascota = next((m for m in mascotas if m.nombre == nombre_mascota), None)
    if mascota:
        fecha = input("Ingrese la fecha de la cita (dd/mm/aaaa): ")
        hora = input("Ingrese la hora de la cita (hh:mm): ")
        servicio = input("Ingrese el servicio (consulta, vacunación, etc.): ")
        nombre_veterinario = input("Ingrese el nombre del veterinario: ")
        veterinario = next((v for v in veterinarios if v.nombre == nombre_veterinario), None)
        if veterinario:
            cita = Cita(fecha, hora, servicio, veterinario)
            mascota.agregar_cita(cita)
            print(f"Cita programada para la mascota {nombre_mascota}.")
        else:
            print("Veterinario no encontrado.")
    else:
        print("Mascota no encontrada.")

def consultar_historial(mascotas):
    nombre_mascota = input("Ingrese el nombre de la mascota para consultar su historial: ")
    mascota = next((m for m in mascotas if m.nombre == nombre_mascota), None)
    if mascota:
        if mascota.historial:
            print(f"Historial de {nombre_mascota}:")
            for cita in mascota.historial:
                print(cita)
        else:
            print(f"La mascota {nombre_mascota} no tiene citas registradas.")
    else:
        print("Mascota no encontrada.")

def main():
    clientes = []
    veterinarios = [Veterinario("Dr. Pérez", "555-1234", "Calle Ficticia 123", "Cirugía")]
    mascotas = []
    
    while True:
        mostrar_menu()
        opcion = input("Seleccione una opción: ")
        
        if opcion == "1":
            registrar_cliente(clientes)
        elif opcion == "2":
            registrar_mascota(clientes)
        elif opcion == "3":
            programar_cita(mascotas, veterinarios)
        elif opcion == "4":
            consultar_historial(mascotas)
        elif opcion == "5":
            print("¡Hasta luego!")
            break
        else:
            print("Opción no válida.")

if __name__ == "__main__":
    main()
